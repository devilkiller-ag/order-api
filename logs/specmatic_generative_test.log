Using Specmatic JAR with version: 2.2.1

Using Specmatic environment variables: {"SPECMATIC_OAUTH2_TOKEN":"","CUSTOM_RESPONSE":"false","SPECMATIC_GENERATIVE_TESTS":"true","ONLY_POSITIVE":"false"}
Running command: java "-DendpointsAPI=http://localhost:8080/actuator/mappings" -jar "/home/ashmit/.specmatic/specmatic.jar" test "/home/ashmit/Documents/specmatic-coding-test/products_api.yaml" --testBaseURL "http://localhost:3000"
Specmatic Version: 2.2.1

API Specification Summary: /home/ashmit/Documents/specmatic-coding-test/products_api.yaml
  OpenAPI Version: 3.0.1
  API Paths: 1, API Operations: 2
  Schema components: 5, Security Schemes: none


Failed to query actuator with error: Connection refused


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:43.926
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:43.927
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-h5EdGu1QmHe4OkjsU292jNzSLfE"
    Date: Fri, 24 Jan 2025 00:02:43 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 1
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:43.974
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:43.974
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-M1u4Sc28uxk+zyXJvSTJaEkyIGw"
    Date: Fri, 24 Jan 2025 00:02:43 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 2
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:43.987
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:43.987
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-0rVkPUSjKXvAXSnOiVTQsEptELY"
    Date: Fri, 24 Jan 2025 00:02:43 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 3
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:43.996
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:43.997
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-GmFGyLK2736etq0w88WOBfa7S5o"
    Date: Fri, 24 Jan 2025 00:02:43 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 4
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.8
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.8
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-4U72Xq+/t/P6Xscj7oQblSpGEbo"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 5
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.19
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.20
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-v0WR02X6LTiYi/5IvepyWXxki5M"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 6
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.31
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.31
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-eE+TghVu0lqfC5QQKmjMzwJAx2U"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 7
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.43
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.43
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-0gJqVb2FdhkRy14KA5rSgx8zUSw"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 8
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.54
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.55
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-+rpdfl0zVe2hnQjZJ4NsuN9uBYc"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 9
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.78
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.79
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-FxFfcwJy6PiVqJFzsCkhyu/vp8c"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 10
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.96
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.96
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-hVv0cNJophUD7CGn+ZqXp8tVGo0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 11
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.107
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.107
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-R0vkHEm9hjIzQAeCBxLfT7Mb/uQ"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 12
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.116
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.116
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-8QOrKFS2q+uyOyq1D/dEV/cViHU"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 13
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.129
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.129
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-uaeIWElkfaiCthiVv9oNgwepFy4"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 14
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.137
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.137
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-cLKC9NU7d5duKTB2EyEYSLHM6Qc"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 15
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.144
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.144
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-xhXJoeE9C9lG+l7ydUO1DCmuTig"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 16
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.151
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.151
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-/5wKRLJFUM7oyVo0nYPtf76rjCU"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 17
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.158
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.158
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-r62x4pT1Hnl+jYZxRfDteCoHgg4"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 18
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.165
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.165
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-ZPhCggGWkEjLkr7gRyxhBxxUnPg"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 19
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.174
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.174
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-yCsLoUbVLWZbDMBqa9+3alohzr0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 20
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.182
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.182
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-YMkvF/wJa2P/mVmfWcyTuUjssI8"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 21
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.190
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.190
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-lmCGO1ZxhS4/HJYqtfNm7OtSluE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 22
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.197
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.197
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-6qxFwJt/N/6/mcE989/lZ47FQGk"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 23
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.204
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.204
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-lckP3ZkdEauFILpCjUlWOD7tiP0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 24
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.216
    GET /products?type=gadget
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 5:32:44.217
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 407
    ETag: W/"197-DDX51ECkNDKvzMjgaVJy3G/bF30"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 1,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 5,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 6,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 7,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 8,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 9,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.226
    GET /products?type=book
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 5:32:44.227
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 400
    ETag: W/"190-VkGVyXr1IHyD7jZY6OrLzDDHmjA"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 2,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 10,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 11,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 12,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 13,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 14,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.233
    GET /products?type=food
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 5:32:44.234
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 400
    ETag: W/"190-SHu73HncX/3Fzc3vkDZCfduC34g"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 3,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 15,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 16,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 17,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 18,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 19,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.242
    GET /products?type=other
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 5:32:44.243
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 406
    ETag: W/"196-PIthiLzx8AZN4NpteJCmzbFGfGc"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 4,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 20,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 21,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 22,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 23,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 24,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.250
    GET /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 5:32:44.251
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 1610
    ETag: W/"64a-gTU+VCiXU5hexjfL0K9qwofvpl0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 1,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 2,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 3,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 4,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 5,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 6,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 7,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 8,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 9,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 10,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 11,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 12,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 13,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 14,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 15,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 16,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 17,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 18,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 19,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 20,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 21,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 22,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 23,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 24,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.280
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.280
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-bBFIFFW8A6zOa5o447e1wf1JmgM"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.278Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.290
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 146,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.290
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-eJ/i6Lds7MGUrqYTrpEshHvp3Js"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.289Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.301
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.301
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-x5Ez+Z22pXIb5gVxPlqb0oYnuDo"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.299Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.310
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.310
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-2FcOo+3nQrQQ1uY8DvSrZhZUDsI"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.309Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.319
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.319
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-mQ5xLCjUKo0hVpZ7PkTn2uJOblc"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.317Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.328
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.328
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-1Z7EdOGk02jWhpuwzBkvLDTlQZY"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.326Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.337
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.337
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-2gD9uiPVBitlEbp56FBjuLmICH0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.336Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.346
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.346
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-TQpTSyyvLs0STvabedzeXIugxjg"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.344Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.353
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.353
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-n6WD+lLdrZtDDqIl2mXZi+eLeAo"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.352Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.363
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.363
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-cfni1X7hQak2CTCZZ4J9rPegD7I"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.361Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.371
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.371
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-/bxQKN5NaquQEgXSZxhVEwafd1I"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.370Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.381
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.381
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-ESHZTzlVv8XSe4ApfrhsmbmChpg"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.380Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.390
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.390
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-jzuVbBzr8bfezycqasBt/oAWVDY"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.388Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.398
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.398
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-hlAMc2x7NNPxaYjL1NHXkilcL6M"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.397Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.407
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.408
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-VvWBMeQQDhvqke+5O2ctBkxTP3I"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.406Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.414
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.415
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-BHeIQptXBzKfJbTxSsugNO/xSxo"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.413Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.422
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.422
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-KyZkmpM3EoMAjTULWl63VWIiXL8"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.421Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.429
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.429
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-kjDkiWVKaV/Wn3kB1WAYz3pEDJ4"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.428Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.449
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.449
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-DZTHktHjpHVqKOgd7yf4Xi4XvIk"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.445Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.464
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.465
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-0rXRP9iGTEpZpPTUQTWjRul5Mew"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.463Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.473
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.473
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-fUyAZc9cqFn0vYLMfCsB8TVel50"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.472Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.483
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.484
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Ge7NWgx1gUcvr4Mca4gKL0+FwOk"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.481Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.494
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.494
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-rKfJ1Vd9HExN7ayXyulNOzrEtyg"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.493Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.501
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.502
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-IiM5xjU1sYB+SFUGMB69KZyxxls"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.500Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.510
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.510
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-LRae3Jj+IUJeDhy4t85cHfvuWqE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.508Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.517
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.518
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-WEwXo6EaakLZXZIGgBO9ZQqdJ4s"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.516Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.524
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 359,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.524
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-1vLwdhIZvRGjPxpBkFLqNxGTGS0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.523Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.531
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 602,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.531
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-nb+8uU71qIBopm+0h54y5Si82S0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.530Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.539
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 667,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.539
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-v7zGoQXcMjgNKLPtvAnRFAAEh/E"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.538Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.546
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 308,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.546
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-piXp3TqBgiPU9ZNoej3+qL1V7Z8"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.545Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.553
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 292,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.553
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-XfzMuJCxZ0umurti2YdGnkMNtuE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.552Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.561
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 121,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.561
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-hAJv+jhPTRbarxWu5CS2cIIZl0s"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.560Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.569
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 978,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.569
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-tKoEN+0SlwkF7/wVTuUhTYBUoew"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.568Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.576
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 210,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.576
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-PxvIRPETIfZXIjuR2MJU23NyFdU"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.575Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.583
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 125,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.583
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-WVCHUXkxCQLRyIw1gfDgNvSTfQE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.582Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.591
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 988,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.591
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-QP6m7cfJasUgvKxv47KQvaz8BPg"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.590Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.598
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 969,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.598
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-8i+jip45/JTvaWDecXQCKYEa7oE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.597Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.606
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 853,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.606
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-LnxvqXLFV/VPK4tNFKk4IX46U4Y"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.605Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.613
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 596,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.613
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-PPAMD+861QaxbsnP5inE87rfy5Y"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.612Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.621
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 264,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.621
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-rKBlb0LCvumlWZEgnh00aD3E6XA"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.619Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.635
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 258,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.635
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-9LQ+W2YeMNMrUyQBTkQW3l9Gwzw"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.634Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.645
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 298,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.645
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-3Qx8D7zS+ZBlZ/sddhs0eZIRmbk"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.644Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.655
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 887,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.655
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-rS7tnsFglleukMBNbEuGxQkcmzs"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.654Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.663
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 354,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.663
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-2Wrf4L71e/NG6QbF6UIb4yl3sxQ"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.661Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.673
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 640,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.673
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-9g3kwGRnBZ5BWKn5/WwHKCMwlaI"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.672Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.682
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 450,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.682
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-EhLI79R1/cf8zyq/VH+oCp1X9H8"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.681Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.689
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 344,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.690
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-py1MsX9OCPqXV2sS4m8uYwqG/1A"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.688Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.697
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 267,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.697
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-yjFM72LaDL+G4H81TrLx4gnSNyM"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.696Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.704
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 539,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.704
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-greCi5VoMgoWwBGUrkmTW1B2dvU"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.702Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.711
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.711
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-+kKP6xGAB/VeaQ32d76jxwcyfso"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.710Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.718
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.718
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-orooKDaX7ipIy2NJymlthqsASxE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.716Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.727
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.728
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-68QPnDajxkuZG90GkpScKE4FVig"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.726Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.734
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.734
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-8rpsBK3F/D9NjSMwLl40NDeiT/o"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.733Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.741
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.742
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Ax5QhGAXUFwqD/y/MzEnvU6siSE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.740Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.748
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.748
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-i0fjLHD87CchXep8k2ZuiSZqhnA"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.747Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.756
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.756
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-GZ1tM/z3t83+jQ0Am3CZ9yeNG5U"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.755Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.764
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.764
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-KSOPWJFPVfJ4do+RmKDgls0D8u4"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.763Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.772
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.772
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Us2ThTeGhZe8DiHx0tOf3ryUkfM"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.770Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.781
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.781
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-92yqsU5pATAMGcgdWTdEWhpywks"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.780Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.788
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.788
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-GbYYsAJvCxObbhCgCpMknKO4lo0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.787Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.795
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.795
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-BvUWPNyD5ZRsp21XUDjhROXEA54"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.794Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.801
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.801
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-bk8vf/WctEow1OHeDuo80jI9+AI"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.800Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.808
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.808
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-AFbZYAPBn75/ohYwa7Ccd7GDZ3U"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.807Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.815
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.815
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-yEfHmaupIszBMeWLhogosOwTepI"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.814Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.822
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.823
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Zxj5u+lkXY4AzW7+8IvkjskWhgY"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.821Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.829
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.829
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-82Edt7DQ4Uh9vR+9JVVlsrHRI3s"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.828Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.837
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.837
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-nD7Trth05Q4f/TF/HGBpgCUWRog"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.836Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.844
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.845
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-QOAkQQYePapTgXo0iif36tXd6O0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.844Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.851
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.851
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-H5VWn8bAXajzbI2vo6Rcehkld/0"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.850Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.857
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.857
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-CLG+DhMCGK7IxTWbUcYzwJVGKZw"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.856Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.864
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.865
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-aXZLQxSFLCHU5pQTKsoc+ri/IiE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.864Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.871
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.872
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-JMej4VAoh3Lec36jETLJeO2mKUI"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.871Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.880
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.881
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-qAp6nRElz5blU/cCxZe7hzsYXqY"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.880Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.887
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 729,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.887
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-bIhWyuruVkOMmkKQ/0UQ+tdxkhI"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.886Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.894
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.895
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-y5qyWwmc3IYLsadSxT6S3+9Zvss"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.893Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.901
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.901
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-pwtNVp7aTARDLjKGLdLZhL32jnE"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.900Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.908
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.909
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-tREzzzPZ7dmd2pLcuhQ+hfhvhKQ"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.907Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.916
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.916
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-+12hl42gOEck+inse7IBzhLDd9Q"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.915Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.923
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.923
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-FqF1WTSo5p7nsuNkeVSu2U25M2M"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.922Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.930
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.930
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-VGHUlaTXA3DbuKujGHNoqRlWRB4"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.929Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.937
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 700,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.937
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-n6GBbftM+4CW6y5qG2mb+iLCxRQ"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.936Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.944
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 624,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.944
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-FdQDMMP392XBLWJLf4yUmTZRZD8"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.943Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.955
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 780,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.956
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-tABaLIm6bYgOE09TExXDS5/lVKY"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.950Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.970
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 250,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.970
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-BZlEk8bWIB2TlwXce5//yveim40"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.968Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.983
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 291,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.983
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-WlIsPWQOjIyK5Z/KXvbOiSbBV98"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.981Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.991
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:44.992
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-rkL7x/1yjUbjJUXEo9y+V4qTB7Y"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.990Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:44.998
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 5:32:44.998
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Hw72JeL0mP9FKwk4Vqj97BXItVo"
    Date: Fri, 24 Jan 2025 00:02:44 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:44.997Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.9
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.9
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-SqX0j/7TPhjErr+3MQHXmsAlJ68"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.006Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.16
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.16
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-5B2nF4tZzHhvkZPdZZjKmYENa9I"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.015Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.23
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.23
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-kjlK6DTbeT3T+di5sdz9S519l0k"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.022Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.30
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.30
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-HKF5STfdGjq/2cc3rnOWqImrajM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.029Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.36
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.36
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-NcXSM0zbyAJcc3c7jyqyaVb18Ms"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.035Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.43
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": "LVQEU",
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.43
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-3+oGEc97qLYoycXfd1jH9h6Xccs"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.042Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.50
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.51
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-OhZ96pbgX90Uheq+Ur/VREk5Br0"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.049Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.59
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.59
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-E/1lKh2qZm4KP8quOGuvB3I1NT0"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.057Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.65
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.65
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-8LXjTbHJK+7WfaIEsg4ot5RX428"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.064Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.72
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": true,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.73
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-c/I4piEqy3xo+vbRjN9LOrb7OLU"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.071Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.80
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.80
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-NfeSBPPxplfMVZ/R6ZEOyUtKoBE"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.079Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.88
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": "RUXPB",
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.88
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-oZPxTYGYH4h1ThiVduEu4DyfBPE"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.087Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.95
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": "RRYCN",
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.95
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-hi4i1BnW0wqo8d5xyLn/pHKMqHg"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.094Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.102
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.102
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-zdYrZDnHjJhSMRzkCcqWMncngQA"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.100Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.109
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.109
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Xma2O1p9xmUVdoXK5YNtOjk7P+c"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.107Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.114
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.114
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-iEPoPOAJeyRZpoOniQk5qyaE1p4"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.114Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.121
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.121
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-KY7F0h7c1bMxziGl590WrV7pCEs"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.120Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.127
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.128
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-ZGjQdytvvQWIutYFlh61vrRPgIM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.126Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.133
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": false,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.133
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-k2VTaf9DYFGTdxShHRCSvVoyUws"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.132Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.139
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": "SRJYP",
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.139
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-H2ztjDZrl2UEbkSmDjZQFVcgElg"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.138Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.145
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": "UXNUX",
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.145
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-QbHBlxBd09hIZIFnkVibSJ69V5Y"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.144Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.154
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.154
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-M17ahd3HGwV8pzVjT5/bSkN/vek"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.153Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.161
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.161
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-DAt1IlUXzUi5JG+fZM2ZPegrwrY"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.159Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.168
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.168
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-aLN+P2TMmLm4SdeytgzMndjDcO4"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.167Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.175
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.176
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-MQEK8WGEiBahWM8OjKDvXRGs2Bg"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.174Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.182
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.182
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-I1/4ViKaheEcEtx45comtbVLnpM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.181Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.189
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.189
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-p331Ze7hdUzgVtL9ts7x5kzg6qE"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.188Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.195
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": true,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.195
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-iiHxIrJr55g218wb5IS5PetKe80"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.194Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.201
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.201
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-x5+YbTx/97zlVOgjZdK3CqbZ4qY"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.200Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.207
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": "MPORC",
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.207
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-fzTRTNQEyFhVJDY5sz4BxfC1tDc"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.206Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.214
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.214
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-NMKbZVftJ81D//vZ65DLfrdJnz8"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.213Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.219
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.219
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-WHkR2UXZ4fHPHdil+65QPHEpgP4"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.218Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.227
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.227
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-QPHeLkc6P8WVuGBPsPWsv5uHkQk"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.226Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.233
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.233
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-qNreD8NZeu/MimjJWwMrE37ehRM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.232Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.239
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.239
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-KrC3mZGmzmUFRrQkx/ULGmXu8OY"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.238Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.246
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.246
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-8Bl/UzbVlHk7I2gXUAMnyWv6XJY"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.245Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.252
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": true,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.252
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-pjA/e84TUhylNc/VJgGJ+qdG8CE"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.251Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.260
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.260
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-A7CHrofouSdRbdMtf9H9JLEoAIk"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.259Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.265
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": "COHQC",
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.265
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Y99GVatKgE9OdyLYE+PMC+E2Ff4"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.264Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.271
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": "TKKIU",
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.271
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-sOS84kLy/pYEuHIvVKbI6CR1VcA"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.270Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.277
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.278
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-z5ZRfpypJAEDlFj9vqKYB/udrIk"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.276Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.283
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 5:32:45.283
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-dqGfEBNFR0h1xIq/cqa49MoKtsU"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.282Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.289
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 5:32:45.289
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-IQRRigkUWgxUKk1NWsR7HASjrvk"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.288Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.295
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.295
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-ytRDsrzPkfW+BVh3AG88q94Vu8E"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.294Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.301
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": false
    }

  Response at 2025-1-24 5:32:45.301
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-tNlacbTLwouIyOwUtCasKEakZCU"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.299Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.308
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": "NCOFQ"
    }

  Response at 2025-1-24 5:32:45.308
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-ERwVHIceUk0c/la99J5bhJMvWB4"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.307Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.321
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.321
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-UWCQNmsBf+9F7jSSNOhhsi5TINE"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.320Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.327
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": false
    }

  Response at 2025-1-24 5:32:45.327
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-QLqEoO8KeHCs3Q52nUQ9gaXM7Ko"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.326Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.332
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": "KTJSC"
    }

  Response at 2025-1-24 5:32:45.332
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-wwte/JAOluEkBphlINvkQJ1pEOs"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.331Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.340
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.340
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-ckmI9Yxpc8OcUSBtmtz7SND7VhE"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.339Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.348
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.348
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-/Z3ITJolEY/046nGHqEa2FVEdVo"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.347Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.354
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": true
    }

  Response at 2025-1-24 5:32:45.354
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-BqD4qweflRcORyAq/FD/B8kRLqE"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.353Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.360
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": "JJRWM"
    }

  Response at 2025-1-24 5:32:45.360
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-EdiCuEb4Co8UH+nnIEDsoPWNakI"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.359Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.367
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.367
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-VfNtX+mtO72Wf82SY4Z0MLg4UOM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.366Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.375
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.375
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-cy0TNBRSC0A/OyZG3uTPvHWH8Lo"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.373Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.381
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": true
    }

  Response at 2025-1-24 5:32:45.381
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-JTNh3647rp15jgdlLItLwvCRJ4I"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.380Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.387
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": "NPKPY"
    }

  Response at 2025-1-24 5:32:45.387
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-hjV6R2/AtsFGtfxuYtmLfuB6g1I"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.386Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.394
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.395
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-vTaQQ59E/uuM8hsolFoBU76e9eU"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.393Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.400
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.400
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-QxWUZj0HwMthloIQSZN+DPV0KIA"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.399Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.407
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": true
    }

  Response at 2025-1-24 5:32:45.407
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-D+8w7d4mtqg7D/XGE0KmC0VYaP0"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.406Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.413
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": "FERRO"
    }

  Response at 2025-1-24 5:32:45.413
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-nM6ExDdMH/B5CbLDuNE0V5LuRfA"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.412Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.420
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.420
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-fPbNYdrRVpWYIxTP/1541T7Vcj8"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.419Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.426
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.426
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-iaKx1b2pqS39JXeR8BRmUdNVp+U"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.425Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.431
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": "IXNSC"
    }

  Response at 2025-1-24 5:32:45.431
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-QcQ5TUN29Img9LyBh1fCXiAvT9E"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.431Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.439
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.439
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-KBdoeTbfgZiJei6jPVXFpcHlll0"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.438Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.445
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.446
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-AmUEoLWR4eFH3pWE1n5+N7s/16g"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.445Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.452
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": true
    }

  Response at 2025-1-24 5:32:45.453
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-sY4MCZCbWHGhbEd/pAxV6OixCPI"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.451Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.464
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": "RUANB"
    }

  Response at 2025-1-24 5:32:45.465
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-iMKfqkbTpiyRNPAYWss0BC+avx8"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.463Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.474
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.475
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-CoGAm7LUWjlPotFmG9cA6NtQ3Qc"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.473Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.487
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.487
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-5GFs3RvPaJ300RfvDJhDCqq27UI"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.486Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.493
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": false
    }

  Response at 2025-1-24 5:32:45.493
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-V3zz4EyyKVcKF3L3y+B6hBPxN8E"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.491Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.498
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": "WLFJS"
    }

  Response at 2025-1-24 5:32:45.498
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-y77xjxIOhZtp2Rv9i1wAyIMuQWI"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.497Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.504
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.504
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-C61sZmRzgWyGkBoI6QlRem8ZvAU"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.503Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.510
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.511
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-nG+AhyFWnhHFCWvFSp8Zum37Cr0"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.509Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.521
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": false
    }

  Response at 2025-1-24 5:32:45.521
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-kVHgBSOSwroC9RT6/9lwcF4UPR4"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.520Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.530
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": "BCDFF"
    }

  Response at 2025-1-24 5:32:45.531
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-8ru2e8SSTaO1wvMlRu5fqcdeZcQ"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.529Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.537
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.537
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-5tjG8N+AuzDw6PFQEnNFC1MVQbM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.536Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.544
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.544
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-f98oySLTTw01aX1PW5q2WwrPtAM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.543Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.549
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": true
    }

  Response at 2025-1-24 5:32:45.549
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-9c95+pIklAoj/jgh02Z9hfrsmzo"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.548Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.555
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.555
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-GSTImIUtxD0ugv8H7UfuSC0oJUU"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.554Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.561
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.561
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-gdBarmAQdiU+n13E3kXyO5gmRK4"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.560Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.566
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": false
    }

  Response at 2025-1-24 5:32:45.566
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-OAsAWwYzacuLferBtHHup7d3TBc"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.565Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.573
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": "QCAQP"
    }

  Response at 2025-1-24 5:32:45.573
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-hwGIMR8ttnA+W41K296IrKs14UQ"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.572Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.579
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.580
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-jVzU1i18si88X0o0V5cw/yRFpoM"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.579Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.586
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": true
    }

  Response at 2025-1-24 5:32:45.586
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-utSKlflrl2F50NBC3tfPhzaJ9Ds"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.585Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.593
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": "CYKOP"
    }

  Response at 2025-1-24 5:32:45.593
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-t8+0v3aHiepxzCr9hc+h5FC558Q"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.592Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.600
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.600
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-fosMlwiZ0xD4jpSM/NMQz3mOLaY"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.598Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.607
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 5:32:45.607
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-h+YKyZgZIzQKxJHQsHzmeGUbgPU"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.606Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.615
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": true
    }

  Response at 2025-1-24 5:32:45.615
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-vYIqyyhxlTzDS2Sl9AalcnV6VUA"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.614Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.621
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": "MPTQK"
    }

  Response at 2025-1-24 5:32:45.622
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-X55GF4jszRWHDMaCKSXt6cR9xEA"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.620Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.628
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 5:32:45.629
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-kNCF7Whi0yhONmxIBM5KkKUWcz0"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.627Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.636
    GET /products?type=210
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 5:32:45.637
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 137
    ETag: W/"89-ScvqQPtEE9h1cBTBiiYsxptyiTI"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.635Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products?type=210"
    }

-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 5:32:45.642
    GET /products?type=true
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 5:32:45.642
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 138
    ETag: W/"8a-1QEmmu6dFf868ajbhB2We7BfmPY"
    Date: Fri, 24 Jan 2025 00:02:45 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:02:45.641Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products?type=true"
    }

-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:GET_PRODUCTS has SUCCEEDED

Could not load report configuration, coverage will be calculated but no coverage threshold will be enforced

|-----------------------------------------------------------------|
| SPECMATIC API COVERAGE SUMMARY                                  |
|-----------------------------------------------------------------|
| coverage | path      | method | response | #exercised | result  |
|----------|-----------|--------|----------|------------|---------|
| 100%     | /products | POST   | 201      | 24         | covered |
|          |           |        | 400      | 178        | covered |
|          |           | GET    | 200      | 5          | covered |
|          |           |        | 400      | 2          | covered |
|-----------------------------------------------------------------|
| 100% API Coverage reported from 1 Paths                         |
|-----------------------------------------------------------------|



Generating HTML report...
Successfully generated HTML report in ./build/reports/specmatic/html
Saving Open API Coverage Report json to ./build/reports/specmatic ...


Tests run: 209, Successes: 209, Failures: 0, Errors: 0

Executed at 2025-01-24T05:32:45.911538885
Specmatic contract test exited with code 0Using Specmatic JAR with version: 2.2.1

Using Specmatic environment variables: {"SPECMATIC_OAUTH2_TOKEN":"","CUSTOM_RESPONSE":"false","SPECMATIC_GENERATIVE_TESTS":"true","ONLY_POSITIVE":"false"}
Running command: java "-DendpointsAPI=http://localhost:8080/actuator/mappings" -jar "/home/ashmit/.specmatic/specmatic.jar" test "/home/ashmit/Documents/specmatic-coding-test/products_api.yaml" --testBaseURL "http://localhost:3000"
Specmatic Version: 2.2.1

API Specification Summary: /home/ashmit/Documents/specmatic-coding-test/products_api.yaml
  OpenAPI Version: 3.0.1
  API Paths: 1, API Operations: 2
  Schema components: 5, Security Schemes: none


Failed to query actuator with error: Connection refused


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.763
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.764
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-h5EdGu1QmHe4OkjsU292jNzSLfE"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 1
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.805
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.805
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-M1u4Sc28uxk+zyXJvSTJaEkyIGw"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 2
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.816
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.816
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-0rVkPUSjKXvAXSnOiVTQsEptELY"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 3
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.825
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.825
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-GmFGyLK2736etq0w88WOBfa7S5o"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 4
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.838
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.839
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-4U72Xq+/t/P6Xscj7oQblSpGEbo"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 5
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.849
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.850
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-v0WR02X6LTiYi/5IvepyWXxki5M"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 6
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.860
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.861
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-eE+TghVu0lqfC5QQKmjMzwJAx2U"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 7
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.871
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.871
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-0gJqVb2FdhkRy14KA5rSgx8zUSw"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 8
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.890
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.890
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-+rpdfl0zVe2hnQjZJ4NsuN9uBYc"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 9
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.900
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.901
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-FxFfcwJy6PiVqJFzsCkhyu/vp8c"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 10
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.912
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.912
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-hVv0cNJophUD7CGn+ZqXp8tVGo0"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 11
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.920
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.921
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-R0vkHEm9hjIzQAeCBxLfT7Mb/uQ"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 12
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.932
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.932
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-8QOrKFS2q+uyOyq1D/dEV/cViHU"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 13
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.939
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.939
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-uaeIWElkfaiCthiVv9oNgwepFy4"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 14
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.947
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.948
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-cLKC9NU7d5duKTB2EyEYSLHM6Qc"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 15
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.956
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.956
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-xhXJoeE9C9lG+l7ydUO1DCmuTig"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 16
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.965
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.965
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-/5wKRLJFUM7oyVo0nYPtf76rjCU"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 17
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.974
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.974
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-r62x4pT1Hnl+jYZxRfDteCoHgg4"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 18
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.986
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:58.986
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-ZPhCggGWkEjLkr7gRyxhBxxUnPg"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 19
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:58.996
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:58.997
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-yCsLoUbVLWZbDMBqa9+3alohzr0"
    Date: Fri, 24 Jan 2025 00:40:58 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 20
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.4
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.4
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-YMkvF/wJa2P/mVmfWcyTuUjssI8"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 21
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.13
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.13
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-lmCGO1ZxhS4/HJYqtfNm7OtSluE"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 22
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.22
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.22
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-6qxFwJt/N/6/mcE989/lZ47FQGk"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 23
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.32
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.33
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-lckP3ZkdEauFILpCjUlWOD7tiP0"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 24
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.46
    GET /products?type=gadget
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:10:59.46
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 407
    ETag: W/"197-DDX51ECkNDKvzMjgaVJy3G/bF30"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 1,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 5,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 6,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 7,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 8,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 9,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.56
    GET /products?type=book
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:10:59.56
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 400
    ETag: W/"190-VkGVyXr1IHyD7jZY6OrLzDDHmjA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 2,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 10,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 11,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 12,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 13,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 14,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.64
    GET /products?type=food
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:10:59.65
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 400
    ETag: W/"190-SHu73HncX/3Fzc3vkDZCfduC34g"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 3,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 15,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 16,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 17,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 18,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 19,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.72
    GET /products?type=other
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:10:59.72
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 406
    ETag: W/"196-PIthiLzx8AZN4NpteJCmzbFGfGc"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 4,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 20,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 21,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 22,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 23,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 24,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.80
    GET /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:10:59.81
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 1610
    ETag: W/"64a-gTU+VCiXU5hexjfL0K9qwofvpl0"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 1,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 2,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 3,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 4,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 5,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 6,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 7,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 8,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 9,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 10,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 11,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 12,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 13,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 14,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 15,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 16,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 17,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 18,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 19,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 20,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 21,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 22,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 23,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 24,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.110
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.110
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-+GQlzrbnNlKvO+NhirDv3TXxNAM"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.108Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.121
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 623,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.121
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-NyOf0tk5TvEEk4GXFtUnD6YKymA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.120Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.134
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.134
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-4QzHx6mWLjK+4MZgdisnFTC5QCs"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.132Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.142
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.143
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-cdW1ZE23hSPFFQ+ksWDmG4TCDlI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.141Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.153
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.154
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-ccrJYC34W9BX0jsu2uPSsXLr01A"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.152Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.164
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.164
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-UE8xfXQel0Kp1KdNuEpEFp3hmJs"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.162Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.171
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.172
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-YhfuOZ+vnb4cpvZWqnoJss7u6+k"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.170Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.181
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.181
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-/FceJ7rr+sFvl7l5ksgfM/OxSEk"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.180Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.189
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.189
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-LliOupOApopqhCSL04fxXOk8V+Q"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.187Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.198
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.199
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-P//mlNY4jWAA+NDbgER8JqlQrvQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.197Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.207
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.207
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-A38RT3Q87DoEdLSvM2CTDuA7YLc"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.205Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.218
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.218
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-ONBWqtJv7CF2GJ5odIWLu7XUddU"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.216Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.226
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.226
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-eXzfpNRwEmGRX5A9xrpyd00RSOA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.225Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.242
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.242
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-g/vRoIe6MV2QmSOnH3fXRm4P6tM"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.240Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.255
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.255
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-opc4tT8kCEl59K1HJseytPpd53w"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.254Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.267
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.268
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-p9iqdEDpAfckhbmAspKpVAyTFYo"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.266Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.278
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.279
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Ezg5gNXAspx1DASnrl1ycUqgEvQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.277Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.285
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.285
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-VrYEC1p4TzLSGI9/QEYwncRVXRQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.284Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.291
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.292
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-8DnWV5hNbaW0e13ss2ZzHIggVvA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.290Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.299
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.300
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-+YHwTtTx2dPy5YOGnH0QvqnxonA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.298Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.311
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.311
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-YK0Lglp67lTXEg97JcLC3HUtLUk"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.309Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.319
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.319
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Ry5pj6XVALCW8e86rxaZ/oS6irA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.318Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.326
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.327
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-c062ECTJnNZS5g7pP9CKN7aGOvA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.325Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.339
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.339
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-22fHA/SwssBY2s7F5o/57Upc94o"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.338Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.347
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.347
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-bMncjcpN2sSaZ9P/5psS7BBubA4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.346Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.354
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.355
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-D7kdvo3RcY1pxIggxmg2EVIe1Kg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.353Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.362
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 300,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.362
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-BdDCU+3ySD9B530+wy8MVLoq9QA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.360Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.370
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 737,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.370
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-NC5sqH9oG211hbT7v6ZNHJarBLA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.369Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.377
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 854,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.377
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-2kpAmohiXTjJh7mTIAhIgRWRj0U"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.376Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.385
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 700,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.385
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-a31ONZxNv6yQ3C119xXduFy5j8U"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.384Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.391
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 953,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.391
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-QZXLgi3PdoPIpIaiSmNgzJKKfzM"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.391Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.399
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 692,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.399
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-o9yMxZ7uuLwdkfXXcfA2PatpXJQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.398Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.405
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 692,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.406
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-vALUoEaJJpfJ+62AP3ip/aM8iwE"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.405Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.414
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 892,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.414
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Vub9InqPyGc/1Z1dxdaj6kEcikA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.412Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.421
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 342,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.421
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-kPiJrtE5+0ssPZzLQ4hmC6CTjO4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.420Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.429
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 211,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.429
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-MwL0UzrkhcbizzcQFnL8dInkRqc"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.427Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.436
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 387,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.436
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-dqgMpXcrWyunN33SlQjGHo071zg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.435Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.443
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 644,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.443
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-wP6Zcy4dg4A2bVXxtX5MK8Blsd8"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.442Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.451
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 815,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.451
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-e1o+SSDm8GKg3XZjpY+ZE5YIq2A"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.450Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.457
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 407,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.458
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-lzbgHKiBkJExQa7Dd4DdTxjRTIc"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.457Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.465
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 649,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.466
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-IlVaEZdrfseBHNiYVds/z4OG9Y4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.465Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.471
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 700,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.471
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-hoxKShayNiSMZkDuCHYRa9L5bFg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.470Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.477
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 660,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.477
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-DHfAuxY0osogk5a+XqXhidIFBiY"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.476Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.486
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 898,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.486
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-QN2yiZ6fJkW5RGWfLRxt8rlrhEM"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.485Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.492
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 850,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.492
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-yyPdDxn1oy/RpP5u9PgvErQ1CFM"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.491Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.499
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 544,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.499
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-mVKSVVZiM8UQr3TP0DFI3cOJ+Xw"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.499Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.505
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 307,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.505
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-HhhnJS/eMQk9SfLMr8R7pR4rMtQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.504Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.514
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 492,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.514
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-4autRxaYT6bw8PH8PmTaPeiJ9ek"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.512Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.521
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 655,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.521
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Z7EC6oEaDIEQu+pF7t0/vKiP2I4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.520Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.527
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.528
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-X2edRsPTg4G3ZYDdYRkAWGeDL+k"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.526Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.534
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.534
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-uDJJljPPdpkROBE9bZ1IyMsgxv4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.533Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.540
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.540
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-z68wixAbZRGCkuxiFr8g5ZDdCpk"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.539Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.548
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.549
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-uPQ7vwiGDCKkOVioxdBHONpHL+M"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.548Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.554
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.554
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Lg+4UljKhvJLfQ1Vm1USrlUTi8g"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.553Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.562
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.562
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-+eCH1hXmV37nUkh6lj6r0DdIZws"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.560Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.572
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.572
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-15hJbNKrcNVhLUO2KYXIGKnlzO0"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.570Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.582
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.582
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-hiQvL6GlmqEGBCULJq4rDH3dVHg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.580Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.588
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.588
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-pl/G8eyjTFvIgk1HNQym1zVbsn0"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.587Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.596
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.596
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-WkKiVjPeSSJOlj8IxiFTdBM5OsM"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.595Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.601
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.601
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-m1YjSrA4AbpjI0BN4sFDnoe57lQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.600Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.608
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.608
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-UeOuDIUm7D8vWApwyPlQkuHCZHA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.607Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.615
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.615
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-s326tbutl6ni3qC8P4+1pQrjReg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.614Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.620
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.620
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-MBSx3AOv9/ilrDf3wKItbyY7Uy8"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.619Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.626
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.627
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-m1orIuy4kOJkLIHc+uY/K+944WA"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.625Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.633
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.633
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-kH7bhB9/tO1W70wMdk+UKNpIA0s"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.632Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.639
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.639
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-ZvB+X2psI4OoSv1pGklp+0tszRQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.638Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.647
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.647
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Q2yqo8xhnPfXqR3toplmTB26OmI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.646Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.652
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.652
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-fyGnkvb8DQlmH20xVlH9nONWwfE"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.652Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.659
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.659
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-qiRF75Y4l8KYRC25pjioK4glKTI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.657Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.668
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.668
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-HL657MMumXmBuzc3OpBrlaHelKY"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.667Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.674
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.674
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-t2F5x1iqt4ositsFrMkmy2RH+1M"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.673Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.683
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.683
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Hhd6mJ1VbDw+uZfOIPCe0Mhr3uQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.682Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.689
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.690
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-FRwQ0wWXtHdM8ZhGmUbkyd4SXIw"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.688Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.697
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 424,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.698
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Ljy90uNuFmTII6w0v6d0LpDNByw"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.697Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.703
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.703
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-pUaATUQ+83qzS/Gqhw04SCHA8vo"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.702Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.711
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.711
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-2lCy8CPKNkIvXeci6qLbUzO/260"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.710Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.718
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.719
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-4ViIHpASLB9rP01DIxNWGTkLNcI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.718Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.724
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.724
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-e2OEc+pW6lnm3Fo4XRxZS7IF5Lg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.723Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.732
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.732
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-QFt1CLeUnYIxWvl6k5N1wNBUDFQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.731Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.738
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.738
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-YgWypJnJDvIiEQelt7ciu+stDxk"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.737Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.746
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 475,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.746
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-BmXpSB6R3u6SpiKjgUK1Frx4Hhg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.744Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.753
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 962,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.753
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-UxhkX31oBIMPhGb99SEebmPCERQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.752Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.759
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 462,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.759
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-1TqT9jpPNDyXxMycwDhYa3wcnkc"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.758Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.768
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 663,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.768
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-IB2rGQR54xke3UfroZNmYPpbka8"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.767Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.774
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 220,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.774
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-/PtYrk874DVM5o2/wm2jL4xXYZs"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.773Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.783
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.783
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-OcHIAt4iRV6YCZqnqmjegn0/Ze4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.782Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.788
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.788
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-M/oRppBcHFCg/Pd4hk+dKXa4hSc"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.787Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.795
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.796
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-wJ0k+tEdO05EsP/lifNV7oGoas4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.793Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.802
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.802
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-82NHWqYrRn+iEP5duh1csqX2zLo"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.801Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.807
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.807
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Nra8LG6tmF5R0/9vVGzgZlSVK90"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.806Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.815
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.816
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-+MHb1P7fc9xSs5wL3cynJy0p4CU"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.815Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.821
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.821
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-/R/sTHFosB22XLqWU5krkcYRi8c"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.820Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.828
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": "QSHOB",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.828
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-jWDjIZiDbHe2Q9ERNive5OGII2k"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.826Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.836
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.837
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-zISZZUL2uMZzc0++A4tgEz9Rh9o"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.836Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.843
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.843
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-7yGh3PcHQEhEjM8kWzuYnUiPF2U"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.842Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.851
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.851
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-VcNv+Xb3Cdp2c8ImjTj38WmWcoE"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.850Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.857
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": false,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.857
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-MFtUoDIWP3fhh2GtR7VSe52n6LI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.856Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.867
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.867
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-rVglblQQSlm6DEwwXa8EEeu4P18"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.866Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.874
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": "NNFOQ",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.874
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-2xxWNdmOq3rrEREP8xOtBPhwKAI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.872Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.882
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": "TDTYD",
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.882
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-H4L7FDeqkeZyoPN32mFe/5iocBI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.881Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.888
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.888
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-o16BMJUeWXZNvCii8bN++duwKws"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.887Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.895
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.895
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-nFwXE5s01IX6l6Dz7hTXQpo7oXI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.893Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.901
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.902
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-mJ6BCs/C797eqvW4kBNj6z7wKWQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.901Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.907
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.907
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-JTal5ZfJK6iPi+Z9uHB+8MI5418"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.906Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.915
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.915
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-RFsiMF9njJFmM5eozCwlesU59U4"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.914Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.920
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": true,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.920
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-G+ElnEJN/zy6kEYfXTXX6UiDQIg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.920Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.925
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": "FPBPD",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.925
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-VLgzYbpfpi6jFrDmNg2uHG7fKyg"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.925Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.932
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": "MLYUT",
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.933
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-0gbANiuKp+NTVSqiGHBA9xK/IGk"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.932Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.937
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.937
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-0QUYyfhKXNl9hAcKdcBvmuIfVf8"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.936Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.946
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.946
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Qiq81oFjGibiJ3hlI+cYSUbjK4g"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.945Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.954
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.954
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-WePmQOkJKrTS1DlS4W0Dp0Jy4LM"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.953Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.959
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.959
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-kuIaiwY77+D2jIkXwMFWUeXcfyQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.958Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.968
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.968
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-dyrq4oZzF1hnkIgPWsSQ7nZYyE8"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.967Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.972
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.973
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-NkuLUiu8klxuIuVzffVZg1QokvQ"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.972Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.978
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": true,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.978
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-ve91tAZ8A23CnMITyWkTFeqVJvY"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.977Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.985
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": false,
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.985
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-9+8H0ZaENBIy46N/sz1K9WJ4SvE"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.984Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.990
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": "SXPDA",
        "cost": 0
    }

  Response at 2025-1-24 6:10:59.990
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-oxSnuAR55k+G5iOvA3T+b3OK8gI"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.989Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:10:59.998
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:10:59.998
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-UMX/wcvxppeUa0tgySiuEGrHm3o"
    Date: Fri, 24 Jan 2025 00:40:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:40:59.996Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.3
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:11:0.4
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-vjWM3kB/mFBIutEmPMg9VAr3qgA"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.002Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.8
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:11:0.9
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Iq38B1nkrT4LGBLQCyJaFckCgyg"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.008Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.16
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:11:0.16
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-V2xVI63cOsr6BXlhTFKgn0yKCZM"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.016Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.21
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:11:0.21
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-3r14DYrKLqjhls81Q5iD2jbY2Wk"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.020Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.30
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:11:0.30
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-3OUlnqDp4saqUGPI1ksvV5tnAes"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.028Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.42
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": false,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:11:0.42
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-r1LoKzuZ/vJDyXEyi8HuhE1GG60"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.041Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.52
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 6:11:0.52
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-oK8HWt/vXlcroZGgW7pZCuzYgXc"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.051Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.60
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": "CHCMS",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:11:0.60
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-NdqC84hZOvjMPwfqZMtrBvX650U"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.058Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.68
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": "DBUDA",
        "cost": 0
    }

  Response at 2025-1-24 6:11:0.69
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-GAIdri+aDsLIPcI/9diK1rlUJR0"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.067Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.76
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:11:0.76
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-xVoSGvrV6qo/RS0eeSU+rCNXh64"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.075Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.82
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:11:0.82
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-iDv+GVWG/w5xT1HpsXzuAgA7DMs"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.082Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.87
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:11:0.87
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-dwXMcz6PeLptonFBJePDsD9xEFw"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.086Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.93
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.93
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Pqzgckq3PnPKU/yQ8tnZVS+sAkQ"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.092Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.103
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": false
    }

  Response at 2025-1-24 6:11:0.103
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-Px7gOMpS0FpkJ9q9QhWF6X72qII"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.101Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.112
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": "ABPVR"
    }

  Response at 2025-1-24 6:11:0.112
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-AMDgq7zj8YAyrbzo/VMQQNiNp3s"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.111Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.121
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.121
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-QLcLphCOM4i+rgnXbwh4LiGHMR8"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.120Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.126
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": true
    }

  Response at 2025-1-24 6:11:0.126
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-PdFeT237T5dl0avbOVzR1jQ1nxE"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.125Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.134
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": "KWIQP"
    }

  Response at 2025-1-24 6:11:0.135
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-3fiqanK5y/5/htD4Pu/c27luO+U"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.133Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.143
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.143
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-k6p3lkBstqkkbqLvFX766Ke2Ko8"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.141Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.148
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.148
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-xOGLnTZajnMVyoQm22/M7YXzl2U"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.147Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.156
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": true
    }

  Response at 2025-1-24 6:11:0.156
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-/69iVbUVPoC0/8jnj9o+YM7CgEQ"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.154Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.162
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": "TCBWE"
    }

  Response at 2025-1-24 6:11:0.163
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-rcFTLT+AvVDxXAUr5OJ2ugPjE2k"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.161Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.170
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.170
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-vZ+YO48tfe4Sj9/39Ua8kMaYG10"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.169Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.178
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.178
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-0XEiPFlMf0Ocp2OLGluC0jmtmVQ"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.177Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.185
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": false
    }

  Response at 2025-1-24 6:11:0.185
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-ngEeiWGiY7dtSrAEftgTjsgIz4s"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.184Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.190
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": "JNMUM"
    }

  Response at 2025-1-24 6:11:0.190
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-fk5E5Fj1eGff8zQVPcIS2v6xFj4"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.189Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.199
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.199
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-MhP6SSFYc9ivfnOxa3CWV+1Mc08"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.198Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.204
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.204
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-l6+DAR/+Ku3af4vcO6aQDjUcn2o"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.203Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.212
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": true
    }

  Response at 2025-1-24 6:11:0.212
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-NL5nZ8x96Rlphkhw+nC5F/cbhTY"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.210Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.217
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": "LTFWK"
    }

  Response at 2025-1-24 6:11:0.217
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-uJ7Zz+fTVCzj5LZjxrob9AdUyYE"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.217Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.225
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.225
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-BORkXzqk87jLJjHDIGlGlGqtYL0"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.223Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.232
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.232
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-S4dZVzxAg8nD+QKcn66qSNWlYKQ"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.231Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.237
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": "NEMOR"
    }

  Response at 2025-1-24 6:11:0.238
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-JOMg4YdhEPKQ0BYPYyS1pA86fj4"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.237Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.248
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.248
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-6TTi5n0fA4mcnFe89wKSCTs96iY"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.246Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.254
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.255
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-yps6CiFmMKZlGkKO5KePCXTWacI"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.254Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.261
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": true
    }

  Response at 2025-1-24 6:11:0.261
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-IZarCqFG4MBMxVqdO0fozJJGKfY"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.260Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.271
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": "KMFTE"
    }

  Response at 2025-1-24 6:11:0.271
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-QmM6s7Z6x34TfpXylDO/CuJ/Uwg"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.270Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.280
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.280
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-JLSfUqt+BQYByz8g8587+6qmXs8"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.279Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.286
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.286
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-5xNGg7rtVgmUw4F9untOO8xxPMg"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.285Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.291
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": true
    }

  Response at 2025-1-24 6:11:0.291
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-X0Qy/x3vqCFfKWHnMy6rMgzzmNY"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.290Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.298
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": "VUFBS"
    }

  Response at 2025-1-24 6:11:0.298
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-iEydGdnZUN2oMQV4WPYdbljL6E8"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.297Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.304
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.304
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-9Ir84/8PIwcwuyZiy6xDTEABNe0"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.303Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.311
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.311
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-3oTaPQoiTPc3jYpHwLO+A5oVSY8"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.309Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.317
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": false
    }

  Response at 2025-1-24 6:11:0.317
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-n8RljP4K/U/uBHM9E9VLsd+XmMI"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.316Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.323
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": "MUUAJ"
    }

  Response at 2025-1-24 6:11:0.323
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-Ma27ODlw9+aXD+ui6JkT5+APnCw"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.322Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.332
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.332
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-mied5xrOKHQT14JeXEVhO4h6Yto"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.331Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.337
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.337
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-w9J6ancOI6ajemzXWX9p2X+Lxjo"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.336Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.344
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": true
    }

  Response at 2025-1-24 6:11:0.344
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-y2YQYVSY2TJR7McDweaKci/+YLQ"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.343Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.352
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.352
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-b3lqAbBGPdUJx56bS68VA/jKKj4"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.351Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.359
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.359
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-RuDh0+bVnHr/N9D6UBcsWBkzhfA"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.357Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.366
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": false
    }

  Response at 2025-1-24 6:11:0.366
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-LiIXVNXDMyubBXgxDzIll1F1bLo"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.365Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.371
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": "ROUXD"
    }

  Response at 2025-1-24 6:11:0.371
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-Yqo3ISRLF+Tovys2hwxgqPACgUU"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.370Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.380
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.380
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-lQtXoKStJ99LADoP1wdwDB01u7o"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.379Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.386
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": true
    }

  Response at 2025-1-24 6:11:0.386
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-KvQ+uwOc0JqgT3aJSPY5iN3JVs4"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.385Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.393
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": "TEDXH"
    }

  Response at 2025-1-24 6:11:0.394
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-p4ZkJWlcrT4ZVIu4PZzm9QdEMJ4"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.392Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.402
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.402
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-1RB11YALZOmH+d1+hY2HkGfV7xo"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.401Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.408
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:11:0.408
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-U2HXfYTfGC7ilTET7Nek5UOxYQo"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.407Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.416
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": false
    }

  Response at 2025-1-24 6:11:0.416
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-ZJOrbXc+4uBP0Cr/2vzcqYXpm80"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.414Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.422
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": "GFFDM"
    }

  Response at 2025-1-24 6:11:0.422
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-PMmIfN0NvpLTfbgrjVFud/U6DkQ"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.421Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.428
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:11:0.429
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-qqbXqw3yhZ5vOOStGknuLFapJvE"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.426Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.440
    GET /products?type=768
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:11:0.440
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 137
    ETag: W/"89-A/Y//n/XBDrNajyzMkMxJ6/eQg4"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.439Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products?type=768"
    }

-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:11:0.446
    GET /products?type=false
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:11:0.446
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 139
    ETag: W/"8b-uIGCRBKfaLnWTynXomdtLIyIwzU"
    Date: Fri, 24 Jan 2025 00:41:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T00:41:00.445Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products?type=false"
    }

-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:GET_PRODUCTS has SUCCEEDED

Could not load report configuration, coverage will be calculated but no coverage threshold will be enforced

|-----------------------------------------------------------------|
| SPECMATIC API COVERAGE SUMMARY                                  |
|-----------------------------------------------------------------|
| coverage | path      | method | response | #exercised | result  |
|----------|-----------|--------|----------|------------|---------|
| 100%     | /products | POST   | 201      | 24         | covered |
|          |           |        | 400      | 178        | covered |
|          |           | GET    | 200      | 5          | covered |
|          |           |        | 400      | 2          | covered |
|-----------------------------------------------------------------|
| 100% API Coverage reported from 1 Paths                         |
|-----------------------------------------------------------------|



Generating HTML report...
Successfully generated HTML report in ./build/reports/specmatic/html
Saving Open API Coverage Report json to ./build/reports/specmatic ...


Tests run: 209, Successes: 209, Failures: 0, Errors: 0

Executed at 2025-01-24T06:11:00.706494084
Specmatic contract test exited with code 0Using Specmatic environment variables: {"SPECMATIC_OAUTH2_TOKEN":"","CUSTOM_RESPONSE":"false","SPECMATIC_GENERATIVE_TESTS":"true","ONLY_POSITIVE":"false"}
Running command: java "-DendpointsAPI=http://localhost:8080/actuator/mappings" -jar "/home/ashmit/.specmatic/specmatic.jar" test "/home/ashmit/Documents/specmatic-coding-test/products_api.yaml" --testBaseURL "http://localhost:3000"
Specmatic Version: 2.2.1

API Specification Summary: /home/ashmit/Documents/specmatic-coding-test/products_api.yaml
  OpenAPI Version: 3.0.1
  API Paths: 1, API Operations: 2
  Schema components: 5, Security Schemes: none


Failed to query actuator with error: Connection refused

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 201
	
	  Connection refused


+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has FAILED
Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
	API: GET /products -> 200
	
	  Connection refused


+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has FAILED
Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
	API: GET /products -> 200
	
	  Connection refused


+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has FAILED
Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
	API: GET /products -> 200
	
	  Connection refused


+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has FAILED
Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
	API: GET /products -> 200
	
	  Connection refused


+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has FAILED
Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
	API: GET /products -> 200
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has FAILED
Reason: Testing scenario "POST /products. Response: POST /products"
	API: POST /products -> 400
	
	  Connection refused


-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:GET_PRODUCTS has FAILED
Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
	API: GET /products -> 400
	
	  Connection refused


-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:GET_PRODUCTS has FAILED
Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
	API: GET /products -> 400
	
	  Connection refused


Could not load report configuration, coverage will be calculated but no coverage threshold will be enforced

|-----------------------------------------------------------------|
| SPECMATIC API COVERAGE SUMMARY                                  |
|-----------------------------------------------------------------|
| coverage | path      | method | response | #exercised | result  |
|----------|-----------|--------|----------|------------|---------|
| 100%     | /products | POST   | 201      | 24         | covered |
|          |           |        | 400      | 178        | covered |
|          |           | GET    | 200      | 5          | covered |
|          |           |        | 400      | 2          | covered |
|-----------------------------------------------------------------|
| 100% API Coverage reported from 1 Paths                         |
|-----------------------------------------------------------------|



Generating HTML report...
Successfully generated HTML report in ./build/reports/specmatic/html
Saving Open API Coverage Report json to ./build/reports/specmatic ...



Unsuccessful Scenarios:
  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 201
  
    	  Connection refused

  "+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS FAILED"
        Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
    	API: GET /products -> 200
  
    	  Connection refused

  "+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS FAILED"
        Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
    	API: GET /products -> 200
  
    	  Connection refused

  "+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS FAILED"
        Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
    	API: GET /products -> 200
  
    	  Connection refused

  "+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS FAILED"
        Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
    	API: GET /products -> 200
  
    	  Connection refused

  "+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS FAILED"
        Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
    	API: GET /products -> 200
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT FAILED"
        Reason: Testing scenario "POST /products. Response: POST /products"
    	API: POST /products -> 400
  
    	  Connection refused

  "-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:GET_PRODUCTS FAILED"
        Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
    	API: GET /products -> 400
  
    	  Connection refused

  "-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:GET_PRODUCTS FAILED"
        Reason: Testing scenario "GET Products based on type. Response: List of products in the response"
    	API: GET /products -> 400
  
    	  Connection refused

Tests run: 209, Successes: 0, Failures: 209, Errors: 0

Executed at 2025-01-24T06:34:44.903754957
Specmatic contract test exited with code 1Using Specmatic environment variables: {"SPECMATIC_OAUTH2_TOKEN":"","CUSTOM_RESPONSE":"false","SPECMATIC_GENERATIVE_TESTS":"true","ONLY_POSITIVE":"false"}
Running command: java "-DendpointsAPI=http://localhost:8080/actuator/mappings" -jar "/home/ashmit/.specmatic/specmatic.jar" test "/home/ashmit/Documents/specmatic-coding-test/products_api.yaml" --testBaseURL "http://localhost:3000"
Specmatic Version: 2.2.1

API Specification Summary: /home/ashmit/Documents/specmatic-coding-test/products_api.yaml
  OpenAPI Version: 3.0.1
  API Paths: 1, API Operations: 2
  Schema components: 5, Security Schemes: none


Failed to query actuator with error: Connection refused


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.426
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.427
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-h5EdGu1QmHe4OkjsU292jNzSLfE"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 1
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.464
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.464
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-M1u4Sc28uxk+zyXJvSTJaEkyIGw"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 2
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.475
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.475
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-0rVkPUSjKXvAXSnOiVTQsEptELY"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 3
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.484
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.484
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-GmFGyLK2736etq0w88WOBfa7S5o"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 4
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.495
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.495
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-4U72Xq+/t/P6Xscj7oQblSpGEbo"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 5
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.505
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.506
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-v0WR02X6LTiYi/5IvepyWXxki5M"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 6
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.516
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.516
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-eE+TghVu0lqfC5QQKmjMzwJAx2U"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 7
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.526
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.526
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-0gJqVb2FdhkRy14KA5rSgx8zUSw"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 8
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.543
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.543
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 8
    ETag: W/"8-+rpdfl0zVe2hnQjZJ4NsuN9uBYc"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 9
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.563
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.563
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-FxFfcwJy6PiVqJFzsCkhyu/vp8c"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 10
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.587
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.587
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-hVv0cNJophUD7CGn+ZqXp8tVGo0"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 11
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.597
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.597
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-R0vkHEm9hjIzQAeCBxLfT7Mb/uQ"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 12
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.608
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.609
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-8QOrKFS2q+uyOyq1D/dEV/cViHU"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 13
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.617
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.617
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-uaeIWElkfaiCthiVv9oNgwepFy4"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 14
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.627
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.627
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-cLKC9NU7d5duKTB2EyEYSLHM6Qc"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 15
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.634
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.635
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-xhXJoeE9C9lG+l7ydUO1DCmuTig"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 16
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.644
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.644
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-/5wKRLJFUM7oyVo0nYPtf76rjCU"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 17
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.652
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.652
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-r62x4pT1Hnl+jYZxRfDteCoHgg4"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 18
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.660
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.660
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-ZPhCggGWkEjLkr7gRyxhBxxUnPg"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 19
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.667
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.668
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-yCsLoUbVLWZbDMBqa9+3alohzr0"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 20
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.676
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.676
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-YMkvF/wJa2P/mVmfWcyTuUjssI8"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 21
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.684
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.684
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-lmCGO1ZxhS4/HJYqtfNm7OtSluE"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 22
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.697
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.697
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-6qxFwJt/N/6/mcE989/lZ47FQGk"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 23
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.710
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.710
    201 Created
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 9
    ETag: W/"9-lckP3ZkdEauFILpCjUlWOD7tiP0"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "id": 24
    }

+ve  Scenario: POST /products -> 201 | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.730
    GET /products?type=gadget
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:34:59.731
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 407
    ETag: W/"197-DDX51ECkNDKvzMjgaVJy3G/bF30"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 1,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 5,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 6,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 7,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 8,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 9,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.742
    GET /products?type=book
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:34:59.743
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 400
    ETag: W/"190-VkGVyXr1IHyD7jZY6OrLzDDHmjA"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 2,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 10,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 11,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 12,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 13,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 14,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.749
    GET /products?type=food
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:34:59.750
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 400
    ETag: W/"190-SHu73HncX/3Fzc3vkDZCfduC34g"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 3,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 15,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 16,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 17,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 18,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 19,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.764
    GET /products?type=other
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:34:59.764
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 406
    ETag: W/"196-PIthiLzx8AZN4NpteJCmzbFGfGc"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 4,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 20,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 21,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 22,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 23,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 24,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.773
    GET /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:34:59.773
    200 OK
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 1610
    ETag: W/"64a-gTU+VCiXU5hexjfL0K9qwofvpl0"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    [
        {
            "id": 1,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 2,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 3,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 4,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 5,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 6,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 7,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 8,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 9,
            "name": "iPhone",
            "type": "gadget",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 10,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 11,
            "name": "iPhone",
            "type": "book",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 12,
            "name": "iPhone",
            "type": "book",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 13,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 14,
            "name": "iPhone",
            "type": "book",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 15,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 16,
            "name": "iPhone",
            "type": "food",
            "inventory": 100,
            "cost": 0
        },
        {
            "id": 17,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 18,
            "name": "iPhone",
            "type": "food",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 19,
            "name": "iPhone",
            "type": "food",
            "inventory": 9999,
            "cost": 0
        },
        {
            "id": 20,
            "name": "iPhone",
            "type": "other",
            "inventory": 100,
            "cost": 11920
        },
        {
            "id": 21,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 11920
        },
        {
            "id": 22,
            "name": "iPhone",
            "type": "other",
            "inventory": 1,
            "cost": 0
        },
        {
            "id": 23,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 11920
        },
        {
            "id": 24,
            "name": "iPhone",
            "type": "other",
            "inventory": 9999,
            "cost": 0
        }
    ]

+ve  Scenario: GET /products -> 200 | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.797
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.797
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-t/3gb4zaL2bk0SBa77rT1vviZzQ"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.796Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.807
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 379,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.807
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Bhp317srfXLiHvjFbbfSIgvtoTY"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.805Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.815
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.815
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-2ui22ncvjMTX9rGI1Ar9fPNKmec"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.814Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.825
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.825
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-F2twDJ1o3ZQlGMzexuu+3GpHNvo"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.824Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.832
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.833
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Z9V3igmJfmauocOc2HLNxuuKxm4"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.831Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.845
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.845
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-tyBajZCLNvIanOlElJOXLa3ymWk"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.843Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.863
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.863
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-kdT8AGLAEdJIpZhqdWbFCw+tJRw"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.857Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.881
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.881
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-2OWaZ0UUNDR0w/7sN4v2M2ebxJk"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.879Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.892
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.892
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-6aNuoNb9TEZQWSjKjXj7taiI7v4"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.891Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.900
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.900
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-9f9Z2kw6iS4KnJrvbqDuogbeB6I"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.898Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.911
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.912
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-irto+vaqhL8IOyR/7PAdjRF4XXk"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.909Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.922
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.922
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-7rk7clwK9sGj2jui6Ydym6foby4"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.921Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.930
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.930
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-ySW1H/H1T7kdImEmM83svOF8Km4"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.929Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.939
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.939
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-dnzq3TrLMUpqwBt0yBqNqFSVQxE"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.938Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.946
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.946
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-y1/uz5R+kvf4zpeIotPQNMsuNrE"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.945Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.955
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.955
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-msjPQbxWr8iwbbhAYDUQXmMEP68"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.953Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.964
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.965
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-nD3R7vFNZds3WX/qHuRYTVTnStE"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.963Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.974
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:34:59.974
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-W+rwfXI3G+Lobgolkocp3IEiFZ8"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.972Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:34:59.988
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:34:59.988
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-nS1Y49rTzAWlp/G0/yhK+ZZkgnU"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.986Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.0
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.0
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-0MVRDVpI31XU20cCSkTEWX7DtXw"
    Date: Fri, 24 Jan 2025 01:04:59 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:04:59.997Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.17
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.17
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-H0692xf4K06DsivvJbIROW6bEl4"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.014Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.32
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.32
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-hL/QaOfjPLC/09vyjoVCG9waE/A"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.029Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.46
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.46
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-yKb4xDRTGJMt6TizM5u7wHJHR7M"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.045Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.55
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.55
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-p+GL9dtM+bxbElrwB8QrdKxFmaE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.053Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.64
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.64
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-aZMNO5GbGRIJh9jl8lWp26J2gPk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.062Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.73
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": null,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.73
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-OR6imy/DIv67CqG4zatXSp1zTSI"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.072Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to null, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.80
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 562,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.80
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-MY/eXuDjt2O2Z1zGeFg1lFPK4Ys"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.079Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.89
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 536,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.89
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-zMDY79YozoZ24BdbZQpHqnL7WBk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.088Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.98
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 402,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.98
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-we5QiHMoGV6aSFS7X2Es4fahdus"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.097Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.105
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 851,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.106
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-LHIQ4U7dno1d0ITSYCac/eNIMd4"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.105Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.113
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 475,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.114
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-cOVHlQ9Rgs4a/mbW9mAg7FNdl78"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.112Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.122
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 990,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.123
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-baYHdcfHba9GO0jJIjYXZ27C3vE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.121Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.133
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 482,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.133
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-gxozoutzWQYfNF6o9bF8X1o/F4M"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.131Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.142
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 191,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.142
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-aora4oamgIeyBbkQFyZjgrVOpBc"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.141Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.155
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 506,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.155
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-5xlPMUpf0rApoEzXUp9ON5UY8PA"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.148Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.166
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 935,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.166
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Fftv/+ys+T7RhSPLgfOUEha3rOM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.165Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.177
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 887,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.178
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-KgzCB9GNgn/hl34nuvO2iK+wc74"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.175Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.194
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 594,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.195
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-ALFWmFFSzav3vZ1DEDXgWIdvRXQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.191Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.206
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 845,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.206
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-2gMgxNuNhtYY39d2vHo4QRvBZJk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.204Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.213
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 349,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.213
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-ucC0dYeLK8vcmAPPuVSX8O2XZIY"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.212Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.224
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 401,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.225
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Ludr1nD7XmVzFm36Px/lkPetGUw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.222Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.234
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 655,
        "type": "food",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.234
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-wBWs/urzhKR0Ecu/7mvUZHL/gAQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.233Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.242
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 931,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.242
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-nbGnzuq7+4dVV6zCom7eCNIecgw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.241Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.249
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 944,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.249
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-wPokLeUzqiWa6NW/YmVHV8Ou0NQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.248Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.258
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 712,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.258
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-zw52//QRV3NzX28zzgISIG1Fhzk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.256Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.264
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 897,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.264
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-/JG4WIEvGJUla3bBD//lboExLnQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.263Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.272
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 959,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.272
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-q+zhsAmMa9pAlgs4N3Fbksp4IEQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.271Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.279
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 798,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.280
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-7gnSBK7SXwdV3bm9s1Ih0j2YuRY"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.279Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.289
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": 845,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.289
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-cA1WnPphzwgfTXRKjyjrnEv/yIQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.287Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to number, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.300
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.300
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-1d6qREeJcroGp0izjYUA6SSLx2k"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.298Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.310
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.310
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-qMJN1RX89uy6gyhYY09AW4T4kJQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.309Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.325
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.325
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-v9zJWLOGqpSL/XCcUmwA4bd0moY"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.323Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.337
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.337
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-BsIxw9QyvaCNcf2ARmv+i2h2Qfo"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.335Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.346
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "gadget",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.347
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-5ohSdSukHYMw4atH4S5s4AbnIT4"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.345Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.354
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "gadget",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.355
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-nOeF6mrIXaLIDk1QEm+6qcHa5Pk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.353Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.366
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "book",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.367
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-uWoAAWl3/v951gWqRyFF/fgUXGs"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.364Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.375
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.375
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-p88364yMsNJhkTQ15yNbTVJCuOo"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.374Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.381
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.381
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-Kc6p51Y3L3Uf+nuxPIVqwaNa6io"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.380Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.389
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "book",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.389
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-zn2HRZzilLZlCu4oVZyIm1cFIxI"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.388Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.396
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.396
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-vFSxrWq2Njy2FenUUbFbc0y8JPo"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.395Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.402
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "book",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.402
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-ejj7m0rfD9fgU47hfVg66xtISvE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.401Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.409
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.409
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-cHDdME9lE8bxnq5OxOKH5qr0ueo"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.408Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.415
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.415
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-/GTjXqJmLCrpOSAM15/cCpORu3Q"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.414Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.428
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.429
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-YujZArS/gotOHrKE1cuqEjmpeZw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.424Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.441
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "food",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.441
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-PWdeHeb69+eYEnC3tStl9p5wcCs"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.439Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.459
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "food",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.460
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-nAL8k1DC8pAfx8E/GRf7g6wfL7w"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.454Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.474
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.474
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-/J7duuYfMo5jlgvehgLOBGp0MbY"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.473Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.481
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": false,
        "type": "other",
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.481
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-qA0FmSCbJT0ctgV4izb3kGYWDVY"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.480Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.487
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.487
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-WdVbe6piTnUtRzb8H1e9qMmoEsE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.485Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.498
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.498
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-7uYQIUiTLe6GoaPLJ/ZP2veWo9I"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.497Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.505
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.505
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-GKtRi+QkSyIZ9YGMbA6HfADS8oI"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.504Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.512
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": true,
        "type": "other",
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.512
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 114
    ETag: W/"72-yXTFgEFGBSwpJZI6bm8D69+8N+Y"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.511Z",
        "status": 400,
        "error": "Name must be a non-empty string",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.name string mutated to boolean, REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.522
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.522
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-te+jD3VWLYj92rajBYTo6+8E9tY"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.520Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.529
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 182,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.529
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-jrmdI18ZYK8GUCmptTCdpCzYKg4"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.528Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.534
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.535
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-wG8tdd4jpP+odEO69n3NbvxC7TM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.533Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.542
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.542
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-rsErBzJ1nqUyzcaPfQU2DJ6LAFk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.541Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.549
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.549
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-DXFb0XpjkbM9tP47hEM4R6bZnRw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.548Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.557
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.558
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Lvtk3mC/jxjxwK2+TqOXmgqDpsk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.556Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.566
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.566
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-gJjfr9WZE9T52+fM4lqIu3oeccQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.565Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.574
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": null,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.574
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-qDPT7m9jmQ9E9ITytrRRr9I/Hsc"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.573Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to null, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.580
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 422,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.581
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-fgYSTdGG0w7ZNNAhK/YXE/E/O2E"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.580Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.587
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 150,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.588
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-OaEPxYJ1bRLxSDaVrPmglsgVUxE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.586Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.599
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 984,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.599
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-j58NtxwnwDwYT3BtYSp8pYeeZjw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.597Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.615
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 541,
        "inventory": 9999,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.615
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-pi+yql/IXcQG6S794D9SroB5O4o"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.611Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.627
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": 166,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.628
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-qYwCClyH381JmIPbJE6nqNQ0lZs"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.625Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to number, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.639
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 100,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.639
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Qm8QwAEmF/L8ROWTwm5mPk8aYRM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.636Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.648
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 100,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.648
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-FS/Enmv03dxC4XrZxZc6s12UEm8"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.647Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.656
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": true,
        "inventory": 1,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.656
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-crPlZCtqZ8o3AQr/dK3xu69Y1Ec"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.655Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.664
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 1,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.664
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-4bGFXJix5avuphMC+YHsClGSZcM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.663Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.673
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": false,
        "inventory": 9999,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.673
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-jpheGHFCuEpmzAxZ0Abp0xdJmKU"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.672Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type ("book" or "food" or "gadget" or "other") mutated to boolean, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.679
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.679
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-HSY/7i+QrihF0iVL8KTk3GBtV8w"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.678Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.685
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.685
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-4ttDkm68F5bh2e3RTucYnC0rs6M"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.684Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.692
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": "SDRLO",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.692
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-egsw+kreRNyOHpyVAL/Fanxl1gM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.691Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.700
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.700
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Hh3YbMy+et8NlnCX2dO++Bn5rJM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.698Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.708
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.709
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-m/NOO9H7IN4j4/ZEVV3GfBcg+cM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.707Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.716
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.716
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-WxbMcSOxwD3L5F79AokG0TRpmn0"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.715Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.725
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": true,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.725
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-bqAKHUE8GljT9TZybVxEhvqNhsQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.724Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.733
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": false,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.733
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-K+A3XuiKXO70tmjB2T7aXbaE3Vs"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.732Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.742
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": "DGROY",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.742
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-5TCURPWgKTAcEG4CKWhSdtbRVzE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.740Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.748
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": "CYJDD",
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.749
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-p6cX7dcCu7+ygI+sj8Ig5XouPfk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.747Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.758
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.758
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-FlUyIcVMb/A3ybn88xLTmvpydTY"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.757Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.768
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.768
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-eY3KCFdVJYhDK+I0DGwDpOKdmiU"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.766Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.779
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.779
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-icROj8lpninTqMDNaXrCrfUkbDc"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.777Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.793
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.793
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-HZaCCcCbxV/52pKT5/43aM5y/YI"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.791Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.803
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.804
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-tt0CoHaUgH+u8pE+K+G+eDUsvRQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.800Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.812
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": false,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.813
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-5iaHsUSDYiYUFfhzzDzIYlXwfPk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.812Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.820
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": "FNRJA",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.820
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-Y9OJuldYrgqvN/bULXaQJ1Rqhpc"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.818Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.826
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": "MINPX",
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.826
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-geiZJZfWq/Xgaf+9Nadg27iGj/4"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.825Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.836
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.836
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-TGugcu1jUFnGdmzvy3aVTMxeWMg"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.834Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.842
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.842
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-S8Y4X96PJ92jSEkTWgfXb7vF940"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.841Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.848
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.848
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-ZtRAxn9P342FgnXUZl3oVmV2ymw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.847Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.855
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.855
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-I4y6e9sdMdsxREVKYjooroesmAs"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.854Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.863
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.864
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-gS51qlVgKHVqnWul03Sl89g0mws"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.862Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.870
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.870
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-+ABl/3B0L59AXA4QRZVnVGzR/iw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.868Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.876
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": true,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.877
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-rQ98h9BIlNQ3EfngLDB384fHbrw"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.876Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.883
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": true,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.883
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-FxTotfsfDp9z/70CKXgrc+xusA8"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.882Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.890
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": "RHYBR",
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.890
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-tEm7ckSXMJu+DLhrw8tQqq/0OmA"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.889Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.896
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.896
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-q/o4bvq4vD+CTJpxLbnOWY3iMwI"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.895Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.905
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 0,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.905
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-hkl2S0ckz2bW6iWpp7kfYaSo/7c"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.902Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value lesser than minimum value '1', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.916
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.916
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-rfXfCIpsLWRTuk1ZyHLF/d9q2wc"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.915Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.927
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.927
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-8mbSZXIoRxGKMJ4uYUW0EB9b0Ig"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.925Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.939
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": null,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.940
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-kVp89Q3PdpP31IoLDUvdE4LBFpQ"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.937Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.951
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": null,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.951
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Egll+SmztJEsqWCohddx30DWXoE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.950Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to null, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.959
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": false,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.959
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-snD0oxfTgYAWFmJ8a1At5d/6oH8"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.958Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.967
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": false,
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.967
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-EDVn1acTJigO7twVdUBxeYV9R8Q"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.965Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to boolean, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.975
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": "DKKMB",
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.975
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-8tCV/sNgY+jc/AeODMV59m2dqOU"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.975Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.981
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": "OBOYU",
        "cost": 0
    }

  Response at 2025-1-24 6:35:0.981
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-sjsBhzDp5h5KpwnraYkKYw3AvSs"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.980Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory number mutated to string, REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.987
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 0,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.988
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-xoD6uNeWMoN14oBETDu9qmF1RjM"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.986Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value lesser than minimum value '1'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:0.994
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 10000,
        "cost": 11920.0
    }

  Response at 2025-1-24 6:35:0.994
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-slGjTggi+EpqQyiZNvNzMPDhwtk"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:00.993Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.0
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 10000,
        "cost": 0
    }

  Response at 2025-1-24 6:35:1.0
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 128
    ETag: W/"80-ScpDprpa8HBeUuHeSNMQEBV1pJE"
    Date: Fri, 24 Jan 2025 01:05:00 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.000Z",
        "status": 400,
        "error": "Inventory must be a number between 1 and 9999",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory value greater than maximum value '9999', REQUEST.BODY.cost minimum value 0] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.8
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.9
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-srnPNUlS8OxydZp9cwnPsj2KkZg"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.007Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.16
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.16
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-BsauoUL6WcKSU7FCMxoVwA34DoE"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.015Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.23
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": "RKLGA"
    }

  Response at 2025-1-24 6:35:1.23
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-BlHyjumK1QfJhDzXbssqCr2xaGU"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.022Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.31
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.32
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-CQcZPNkqOZRFDNHtCECA7A7lpwg"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.031Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.38
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.39
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-uaoMzlO2yuRMyEzBkDKasCuo8e0"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.037Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.45
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": "AOMAQ"
    }

  Response at 2025-1-24 6:35:1.45
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-C2SrBmtpVsV1Kp0ZFpn/Fh/aRoY"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.044Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.57
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.57
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-TvzPthU7BPoRx4ebOjMKknorWfE"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.055Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.65
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.66
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-S4YMgxfi+XkONQmmB06X2mN3xpE"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.064Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.74
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.74
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-W48dPQquNZyE4Rfe38Oza4n/ZpU"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.072Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.86
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": "RERQD"
    }

  Response at 2025-1-24 6:35:1.87
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-Wiu49/L1vuRIBJ7uRg0cCahJ3rk"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.083Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.101
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.101
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-TCtD5EybE4fd7cFccvzFuTEZDCo"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.100Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.109
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.109
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-CLiJpq5VkKnbFKNkztXnGn0qHdM"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.108Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.121
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.121
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-N5jSSG6irClx7xqMWDSyU6E0wp0"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.119Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.131
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": "YUJJR"
    }

  Response at 2025-1-24 6:35:1.131
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-hV80sDDaj/DMS9iFJ0988b7kSjs"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.126Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.140
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "gadget",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.140
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-Kgr7mPZqLBgGvP74QXw3fdK2IZ8"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.139Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.146
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.146
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Kx/UTyJTEP0sRjfXskv3YRxvhPE"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.145Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.153
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.154
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-NR7NRW+yViT8tL5PnnaVXl7t0a0"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.152Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.161
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": "CLDGW"
    }

  Response at 2025-1-24 6:35:1.161
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-noqy4su2ZvSnNUyKowmi0Eg3kSc"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.160Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.168
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.169
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-hgL6foaJLoz4tRXhzmD4hoJZUdM"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.167Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.176
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.176
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-oSb8k5LNzxCkJRoboV1VPa6cT6k"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.175Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.181
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": "BGMQC"
    }

  Response at 2025-1-24 6:35:1.181
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-pMIjS5K8ARpEiCZa5aVgfjhToE0"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.180Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.190
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.190
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-Ffbm7GuKPP68t/BiZVzQAHH4UM0"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.189Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.201
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.201
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-7jnBUigjx/HGpigDl02aaIz4dkk"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.198Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.215
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": true
    }

  Response at 2025-1-24 6:35:1.215
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-70N2iyMxz5ZKnWjYaDGMAy8UxlA"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.214Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.226
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": "FVMMT"
    }

  Response at 2025-1-24 6:35:1.226
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-DXuoTJ1PSR4DKdkDI1kdJjv6OPQ"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.225Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.240
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "book",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.240
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-M1fqcmxMGwUGScYvTll0g+egYjI"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.238Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected book from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.247
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.247
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-o6tuTG1pkn7iuT5jaa2iVtTEWAA"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.247Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.254
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": true
    }

  Response at 2025-1-24 6:35:1.254
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-jO2HH44pfpFHScoU1F6v4DyQWQc"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.253Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.259
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": "YPQWQ"
    }

  Response at 2025-1-24 6:35:1.259
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-5+D8ir2tpAFbajpwuHle1MlI3OE"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.258Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.271
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 100,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.271
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-1xq5TINB/8oRmMPg4TIZ7mXEZCE"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.269Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.277
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.277
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-8n8W9x0CO2fo3ETCNtusHnH4uFI"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.276Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.283
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.283
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-N4KbEgCDpe4809P/mWiFdGvfD0w"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.282Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.290
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": "QQUIE"
    }

  Response at 2025-1-24 6:35:1.290
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-YEu1kXZ4UdgHxlRm7SOghm/eb9w"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.289Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.297
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.297
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-O+QLKkbyJv8nmTnyy/Ttwxv5Yvs"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.296Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.307
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.307
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-nW6gEeRkgX51/FB96coqwdNng4o"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.306Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.313
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.313
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-7IlMIhMQfPiDmfOTnnkdFN/bdi4"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.312Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.320
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "food",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.320
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-wEjJhq2Fyv6yCA13YXhrtsSb56I"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.319Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected food from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.327
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.327
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-0cHvT2dOTYrf7TuIwYkJRoEnN/A"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.326Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.333
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.333
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-S+gYlXr/YDXFqqZ8+rrttvp4Y3I"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.332Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.340
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 100,
        "cost": "IYRXD"
    }

  Response at 2025-1-24 6:35:1.340
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-l9G+O7JRnY2gSAlGsTPRhqYN5/s"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.339Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.347
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.347
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-MXdS8DH6xCvW6WlkOAax1bqOjqU"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.346Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.354
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": true
    }

  Response at 2025-1-24 6:35:1.354
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-/ZPCgXn3EIjykDe6dokJYeHsoQY"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.352Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.359
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": "JXKYR"
    }

  Response at 2025-1-24 6:35:1.360
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-3rhQppwrFP1r7yi1fKpRvBRWIiY"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.359Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.365
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 1,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.365
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-okmdilVmYTcu4brgi6/GBBYsUJ8"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.364Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory minimum value 1, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.372
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": null
    }

  Response at 2025-1-24 6:35:1.372
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 122
    ETag: W/"7a-Kt1r3A47VxL/8kaqo37b2ymhho8"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.371Z",
        "status": 400,
        "error": "Request body is missing required fields",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to null] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.378
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": false
    }

  Response at 2025-1-24 6:35:1.378
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-67yWNW43qaQcM04czR98RQH5+aQ"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.377Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to boolean] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.389
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": "QCUWI"
    }

  Response at 2025-1-24 6:35:1.389
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-dl0vqio6Fo8Dz7iqOfvPDfg2Dhw"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.384Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost number mutated to string] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.399
    POST /products
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: application/json
    
    {
        "name": "iPhone",
        "type": "other",
        "inventory": 9999,
        "cost": -4.9E-324
    }

  Response at 2025-1-24 6:35:1.399
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 113
    ETag: W/"71-1qG/GwYX+F4PonoxbzfCyhvqVfM"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.397Z",
        "status": 400,
        "error": "Cost must be a positive number",
        "path": "/products"
    }

-ve  Scenario: POST /products -> 4xx [REQUEST.BODY.type selected other from enum, REQUEST.BODY.inventory maximum value 9999, REQUEST.BODY.cost value lesser than minimum value '0'] | EX:CREATE_PRODUCT has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.414
    GET /products?type=900
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:35:1.414
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 137
    ETag: W/"89-hG+awFuaYVjVW+RKFfPjYTKcdog"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.412Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products?type=900"
    }

-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to number] | EX:GET_PRODUCTS has SUCCEEDED


--------------------
  Request to http://localhost:3000 at 2025-1-24 6:35:1.434
    GET /products?type=false
    Accept-Charset: UTF-8
    Accept: */*
    Content-Type: NOT SENT
    
    

  Response at 2025-1-24 6:35:1.435
    400 Bad Request
    X-Powered-By: Express
    Content-Type: application/json; charset=utf-8
    Content-Length: 139
    ETag: W/"8b-NHXpDdXgXcaDgcHa2o4lkHLPHKU"
    Date: Fri, 24 Jan 2025 01:05:01 GMT
    Connection: keep-alive
    Keep-Alive: timeout=5
    
    {
        "timestamp": "2025-01-24T01:05:01.430Z",
        "status": 400,
        "error": "Type must be one of gadget, book, food, other",
        "path": "/products?type=false"
    }

-ve  Scenario: GET /products -> 4xx [REQUEST.QUERY-PARAM.type ("book" or "food" or "gadget" or "other") mutated to boolean] | EX:GET_PRODUCTS has SUCCEEDED

Could not load report configuration, coverage will be calculated but no coverage threshold will be enforced

|-----------------------------------------------------------------|
| SPECMATIC API COVERAGE SUMMARY                                  |
|-----------------------------------------------------------------|
| coverage | path      | method | response | #exercised | result  |
|----------|-----------|--------|----------|------------|---------|
| 100%     | /products | POST   | 201      | 24         | covered |
|          |           |        | 400      | 178        | covered |
|          |           | GET    | 200      | 5          | covered |
|          |           |        | 400      | 2          | covered |
|-----------------------------------------------------------------|
| 100% API Coverage reported from 1 Paths                         |
|-----------------------------------------------------------------|



Generating HTML report...
Successfully generated HTML report in ./build/reports/specmatic/html
Saving Open API Coverage Report json to ./build/reports/specmatic ...


Tests run: 209, Successes: 209, Failures: 0, Errors: 0

Executed at 2025-01-24T06:35:01.692545028
Specmatic contract test exited with code 0